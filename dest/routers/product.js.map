{"version":3,"sources":["routers/product.js"],"names":["router","Router","get","req","res","current","query","parseInt","offset","find","_id","sort","id","skip","limit","then","status","json","mess","code","items","data","catch","dbQueryErr","findOne","detailData","marketData"],"mappings":";;;;;;AAQA;;;;AAEA;;AAEA;;;;;;AAEA;;AALA;AAMA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA;;AANA;AAXA;;;;;;;;AAkBAD,OAAOE,GAAP,CAAW,YAAX,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC;AACA,QAAMC,UAAUF,IAAIG,KAAJ,CAAUD,OAAV,GAAoBE,SAASJ,IAAIG,KAAJ,CAAUD,OAAnB,CAApB,GAAkD,CAAlE;AACA;AACA,QAAMG,SAASL,IAAIG,KAAJ,CAAUE,MAAV,GAAmBD,SAASJ,IAAIG,KAAJ,CAAUE,MAAnB,CAAnB,GAAgD,EAA/D;AACA;AACA;AACA,kBAAUC,IAAV,CAAe,EAAf,EAAmB,EAACC,KAAK,CAAN,EAAnB,EACCC,IADD,CACM,EAACC,IAAI,CAAC,CAAN,EADN,EAECC,IAFD,CAEMR,OAFN,EAGCS,KAHD,CAGON,MAHP,EAGeO,IAHf,CAGoB,gBAAQ;AACxBX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAM,SADW;AAEjBC,kBAAM,IAFW;AAGjBC,mBAAOC;AAHU,SAArB;AAKH,KATD,EASGC,KATH,CASS;AAAA,eAAO,iBAAOC,UAAP,CAAkBnB,GAAlB,CAAP;AAAA,KATT;AAUH,CAjBD;;AAmBA;AACAJ,OAAOE,GAAP,CAAW,cAAX,EAA0B,UAACC,GAAD,EAAKC,GAAL,EAAW;AACjC;AACA,QAAMQ,KAAKT,IAAIG,KAAJ,CAAUM,EAArB;AACA,gBAAQY,OAAR,CAAgB,EAACZ,MAAD,EAAhB,EAAqB,EAACF,KAAI,CAAL,EAArB,EAA8BK,IAA9B,CAAmC,gBAAQ;AACvCX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAM,SADW;AAEjBC,kBAAM,IAFW;AAGjBM,wBAAYJ;AAHK,SAArB;AAKH,KAND,EAMGC,KANH,CAMS;AAAA,eAAO,iBAAOC,UAAP,CAAkBnB,GAAlB,CAAP;AAAA,KANT;AAOH,CAVD;;AAYA;AACAJ,OAAOE,GAAP,CAAW,SAAX,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAW;AAC5B,eAAOoB,OAAP,CAAe,EAAf,EAAmB,EAACd,KAAK,CAAN,EAAnB,EAA6BK,IAA7B,CAAkC,gBAAQ;AACtCX,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,kBAAM,SADW;AAEjBC,kBAAM,IAFW;AAGjBO,wBAAYL;AAHK,SAArB;AAKH,KAND,EAMGC,KANH,CAMS;AAAA,eAAO,iBAAOC,UAAP,CAAkBnB,GAAlB,CAAP;AAAA,KANT;AAOH,CARD;;AAUA;kBACeJ,M","file":"product.js","sourcesContent":["/*\n * 产品相关的请求响应路由\n * @Author: Cphayim \n * @Date: 2017-04-21 20:56:29 \n * @Last Modified by: Cphayim\n * @Last Modified time: 2017-05-01 22:28:38\n */\n\nimport express from 'express'\n// 数据库连接模块\nimport { Discovery, Journal, Market } from '../modules/db'\n// 响应错误信息的模块\nimport errRes from '../modules/err-res'\n\n// 创建路由\nconst router = express.Router();\n\n// 精选列表 Discovery 数据响应\nrouter.get('/good-list', (req, res) => {\n    // 查询点索引\n    const current = req.query.current ? parseInt(req.query.current) : 0;\n    // 查询长度\n    const offset = req.query.offset ? parseInt(req.query.offset) : 10;\n    // 不返回数据库主键'_id',根据辅键'id'降序查找，\n    // 返回查询结果中索引从 current 到 current+offset 的条目\n    Discovery.find({}, {_id: 0})\n    .sort({id: -1})\n    .skip(current)\n    .limit(offset).then(data => {\n        res.status(200).json({\n            mess: 'success',\n            code: 'ok',\n            items: data\n        });\n    }).catch(err => errRes.dbQueryErr(res));\n});\n\n// 精选详情 Journal 数据响应\nrouter.get('/good-detail',(req,res)=>{\n    // 查询索引 id\n    const id = req.query.id;\n    Journal.findOne({id},{_id:0}).then(data => {\n        res.status(200).json({\n            mess: 'success',\n            code: 'ok',\n            detailData: data\n        });\n    }).catch(err => errRes.dbQueryErr(res));\n});\n\n// 购买列表 数据响应\nrouter.get('/market',(req,res)=>{\n    Market.findOne({}, {_id: 0}).then(data => {\n        res.status(200).json({\n            mess: 'success',\n            code: 'ok',\n            marketData: data\n        });\n    }).catch(err => errRes.dbQueryErr(res));\n});\n\n// 导出模块\nexport default router;"]}