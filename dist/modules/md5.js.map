{"version":3,"sources":["modules/md5.js"],"names":["MD5","instring","hexcase","b64pad","hex_md5","s","rstr2hex","rstr_md5","str2rstr_utf8","b64_md5","rstr2b64","any_md5","e","rstr2any","hex_hmac_md5","k","d","rstr_hmac_md5","b64_hmac_md5","any_hmac_md5","md5_vm_test","toLowerCase","binl2rstr","binl_md5","rstr2binl","length","key","data","bkey","ipad","Array","opad","i","hash","concat","input","hex_tab","output","x","charCodeAt","charAt","tab","len","triplet","j","encoding","divisor","q","quotient","dividend","Math","ceil","full_length","log","remainders","floor","y","String","fromCharCode","str2rstr_utf16le","str2rstr_utf16be","a","b","c","olda","oldb","oldc","oldd","md5_ff","md5_gg","md5_hh","md5_ii","safe_add","md5_cmn","t","bit_rol","lsw","msw","num","cnt"],"mappings":"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","file":"md5.js","sourcesContent":["/**\n *js md5加密代码\n */\n\nfunction MD5(instring) {\n\tvar hexcase = 0; /* hex output format. 0 - lowercase; 1 - uppercase        */\n\tvar b64pad = \"\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n\t/*\n\t * These are the functions you'll usually want to call\n\t * They take string arguments and return either hex or base-64 encoded strings\n\t */\n\tfunction hex_md5(s) {\n\t\treturn rstr2hex(rstr_md5(str2rstr_utf8(s)));\n\t}\n\n\tfunction b64_md5(s) {\n\t\treturn rstr2b64(rstr_md5(str2rstr_utf8(s)));\n\t}\n\n\tfunction any_md5(s, e) {\n\t\treturn rstr2any(rstr_md5(str2rstr_utf8(s)), e);\n\t}\n\n\tfunction hex_hmac_md5(k, d) {\n\t\treturn rstr2hex(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)));\n\t}\n\n\tfunction b64_hmac_md5(k, d) {\n\t\treturn rstr2b64(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)));\n\t}\n\n\tfunction any_hmac_md5(k, d, e) {\n\t\treturn rstr2any(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)), e);\n\t}\n\n\t/*\n\t * Perform a simple self-test to see if the VM is working\n\t */\n\tfunction md5_vm_test() {\n\t\treturn hex_md5(\"abc\").toLowerCase() == \"900150983cd24fb0d6963f7d28e17f72\";\n\t}\n\n\t/*\n\t * Calculate the MD5 of a raw string\n\t */\n\tfunction rstr_md5(s) {\n\t\treturn binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\n\t}\n\n\t/*\n\t * Calculate the HMAC-MD5, of a key and some data (raw strings)\n\t */\n\tfunction rstr_hmac_md5(key, data) {\n\t\tvar bkey = rstr2binl(key);\n\t\tif (bkey.length > 16) bkey = binl_md5(bkey, key.length * 8);\n\n\t\tvar ipad = Array(16),\n\t\t\topad = Array(16);\n\t\tfor (var i = 0; i < 16; i++) {\n\t\t\tipad[i] = bkey[i] ^ 0x36363636;\n\t\t\topad[i] = bkey[i] ^ 0x5C5C5C5C;\n\t\t}\n\n\t\tvar hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n\t\treturn binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\n\t}\n\n\t/*\n\t * Convert a raw string to a hex string\n\t */\n\tfunction rstr2hex(input) {\n\t\ttry {\n\t\t\thexcase\n\t\t} catch (e) {\n\t\t\thexcase = 0;\n\t\t}\n\t\tvar hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n\t\tvar output = \"\";\n\t\tvar x;\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tx = input.charCodeAt(i);\n\t\t\toutput += hex_tab.charAt((x >>> 4) & 0x0F) +\n\t\t\t\thex_tab.charAt(x & 0x0F);\n\t\t}\n\t\treturn output;\n\t}\n\n\t/*\n\t * Convert a raw string to a base-64 string\n\t */\n\tfunction rstr2b64(input) {\n\t\ttry {\n\t\t\tb64pad\n\t\t} catch (e) {\n\t\t\tb64pad = '';\n\t\t}\n\t\tvar tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\tvar output = \"\";\n\t\tvar len = input.length;\n\t\tfor (var i = 0; i < len; i += 3) {\n\t\t\tvar triplet = (input.charCodeAt(i) << 16) |\n\t\t\t\t(i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) |\n\t\t\t\t(i + 2 < len ? input.charCodeAt(i + 2) : 0);\n\t\t\tfor (var j = 0; j < 4; j++) {\n\t\t\t\tif (i * 8 + j * 6 > input.length * 8) output += b64pad;\n\t\t\t\telse output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/*\n\t * Convert a raw string to an arbitrary string encoding\n\t */\n\tfunction rstr2any(input, encoding) {\n\t\tvar divisor = encoding.length;\n\t\tvar i, j, q, x, quotient;\n\n\t\t/* Convert to an array of 16-bit big-endian values, forming the dividend */\n\t\tvar dividend = Array(Math.ceil(input.length / 2));\n\t\tfor (i = 0; i < dividend.length; i++) {\n\t\t\tdividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n\t\t}\n\n\t\t/*\n\t\t * Repeatedly perform a long division. The binary array forms the dividend,\n\t\t * the length of the encoding is the divisor. Once computed, the quotient\n\t\t * forms the dividend for the next step. All remainders are stored for later\n\t\t * use.\n\t\t */\n\t\tvar full_length = Math.ceil(input.length * 8 /\n\t\t\t(Math.log(encoding.length) / Math.log(2)));\n\t\tvar remainders = Array(full_length);\n\t\tfor (j = 0; j < full_length; j++) {\n\t\t\tquotient = Array();\n\t\t\tx = 0;\n\t\t\tfor (i = 0; i < dividend.length; i++) {\n\t\t\t\tx = (x << 16) + dividend[i];\n\t\t\t\tq = Math.floor(x / divisor);\n\t\t\t\tx -= q * divisor;\n\t\t\t\tif (quotient.length > 0 || q > 0)\n\t\t\t\t\tquotient[quotient.length] = q;\n\t\t\t}\n\t\t\tremainders[j] = x;\n\t\t\tdividend = quotient;\n\t\t}\n\n\t\t/* Convert the remainders to the output string */\n\t\tvar output = \"\";\n\t\tfor (i = remainders.length - 1; i >= 0; i--)\n\t\t\toutput += encoding.charAt(remainders[i]);\n\n\t\treturn output;\n\t}\n\n\t/*\n\t * Encode a string as utf-8.\n\t * For efficiency, this assumes the input is valid utf-16.\n\t */\n\tfunction str2rstr_utf8(input) {\n\t\tvar output = \"\";\n\t\tvar i = -1;\n\t\tvar x, y;\n\n\t\twhile (++i < input.length) {\n\t\t\t/* Decode utf-16 surrogate pairs */\n\t\t\tx = input.charCodeAt(i);\n\t\t\ty = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n\t\t\tif (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n\t\t\t\tx = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t/* Encode output as utf-8 */\n\t\t\tif (x <= 0x7F)\n\t\t\t\toutput += String.fromCharCode(x);\n\t\t\telse if (x <= 0x7FF)\n\t\t\t\toutput += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\n\t\t\t\t\t0x80 | (x & 0x3F));\n\t\t\telse if (x <= 0xFFFF)\n\t\t\t\toutput += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n\t\t\t\t\t0x80 | ((x >>> 6) & 0x3F),\n\t\t\t\t\t0x80 | (x & 0x3F));\n\t\t\telse if (x <= 0x1FFFFF)\n\t\t\t\toutput += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n\t\t\t\t\t0x80 | ((x >>> 12) & 0x3F),\n\t\t\t\t\t0x80 | ((x >>> 6) & 0x3F),\n\t\t\t\t\t0x80 | (x & 0x3F));\n\t\t}\n\t\treturn output;\n\t}\n\n\t/*\n\t * Encode a string as utf-16\n\t */\n\tfunction str2rstr_utf16le(input) {\n\t\tvar output = \"\";\n\t\tfor (var i = 0; i < input.length; i++)\n\t\t\toutput += String.fromCharCode(input.charCodeAt(i) & 0xFF,\n\t\t\t\t(input.charCodeAt(i) >>> 8) & 0xFF);\n\t\treturn output;\n\t}\n\n\tfunction str2rstr_utf16be(input) {\n\t\tvar output = \"\";\n\t\tfor (var i = 0; i < input.length; i++)\n\t\t\toutput += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n\t\t\t\tinput.charCodeAt(i) & 0xFF);\n\t\treturn output;\n\t}\n\n\t/*\n\t * Convert a raw string to an array of little-endian words\n\t * Characters >255 have their high-byte silently ignored.\n\t */\n\tfunction rstr2binl(input) {\n\t\tvar output = Array(input.length >> 2);\n\t\tfor (var i = 0; i < output.length; i++)\n\t\t\toutput[i] = 0;\n\t\tfor (var i = 0; i < input.length * 8; i += 8)\n\t\t\toutput[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n\t\treturn output;\n\t}\n\n\t/*\n\t * Convert an array of little-endian words to a string\n\t */\n\tfunction binl2rstr(input) {\n\t\tvar output = \"\";\n\t\tfor (var i = 0; i < input.length * 32; i += 8)\n\t\t\toutput += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n\t\treturn output;\n\t}\n\n\t/*\n\t * Calculate the MD5 of an array of little-endian words, and a bit length.\n\t */\n\tfunction binl_md5(x, len) {\n\t\t/* append padding */\n\t\tx[len >> 5] |= 0x80 << ((len) % 32);\n\t\tx[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\t\tvar a = 1732584193;\n\t\tvar b = -271733879;\n\t\tvar c = -1732584194;\n\t\tvar d = 271733878;\n\n\t\tfor (var i = 0; i < x.length; i += 16) {\n\t\t\tvar olda = a;\n\t\t\tvar oldb = b;\n\t\t\tvar oldc = c;\n\t\t\tvar oldd = d;\n\n\t\t\ta = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n\t\t\td = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t\t\tc = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t\t\tb = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t\t\ta = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t\t\td = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t\t\tc = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t\t\tb = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t\t\ta = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t\t\td = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t\t\tc = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n\t\t\tb = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t\t\ta = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t\t\td = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t\t\tc = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t\t\tb = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t\t\ta = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t\t\td = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t\t\tc = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t\t\tb = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n\t\t\ta = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t\t\td = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t\t\tc = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t\t\tb = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t\t\ta = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t\t\td = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t\t\tc = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t\t\tb = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t\t\ta = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t\t\td = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t\t\tc = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t\t\tb = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t\t\ta = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n\t\t\td = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t\t\tc = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t\t\tb = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t\t\ta = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t\t\td = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t\t\tc = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t\t\tb = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t\t\ta = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t\t\td = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n\t\t\tc = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t\t\tb = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t\t\ta = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t\t\td = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t\t\tc = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t\t\tb = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t\t\ta = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n\t\t\td = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t\t\tc = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t\t\tb = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t\t\ta = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t\t\td = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t\t\tc = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t\t\tb = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t\t\ta = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t\t\td = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t\t\tc = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t\t\tb = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t\t\ta = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t\t\td = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t\t\tc = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t\t\tb = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t\t\ta = safe_add(a, olda);\n\t\t\tb = safe_add(b, oldb);\n\t\t\tc = safe_add(c, oldc);\n\t\t\td = safe_add(d, oldd);\n\t\t}\n\t\treturn Array(a, b, c, d);\n\t}\n\n\t/*\n\t * These functions implement the four basic operations the algorithm uses.\n\t */\n\tfunction md5_cmn(q, a, b, x, s, t) {\n\t\treturn safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n\t}\n\n\tfunction md5_ff(a, b, c, d, x, s, t) {\n\t\treturn md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n\t}\n\n\tfunction md5_gg(a, b, c, d, x, s, t) {\n\t\treturn md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n\t}\n\n\tfunction md5_hh(a, b, c, d, x, s, t) {\n\t\treturn md5_cmn(b ^ c ^ d, a, b, x, s, t);\n\t}\n\n\tfunction md5_ii(a, b, c, d, x, s, t) {\n\t\treturn md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n\t}\n\n\t/*\n\t * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n\t * to work around bugs in some JS interpreters.\n\t */\n\tfunction safe_add(x, y) {\n\t\tvar lsw = (x & 0xFFFF) + (y & 0xFFFF);\n\t\tvar msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t\treturn (msw << 16) | (lsw & 0xFFFF);\n\t}\n\n\t/*\n\t * Bitwise rotate a 32-bit number to the left.\n\t */\n\tfunction bit_rol(num, cnt) {\n\t\treturn (num << cnt) | (num >>> (32 - cnt));\n\t}\n\n\treturn hex_md5(instring);\n}\n\nexport { MD5 };"]}